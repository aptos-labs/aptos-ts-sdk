name: "Run SDK E2E tests"
description: |
  Run the SDK E2E tests against a local testnet from the latest Aptos CLI

# Currently no indexer tests or tests against local testnets from production branches,
# we just use whatever is in the latest CLI.

runs:
  using: composite
  steps:
    # Install node and pnpm.
    - uses: actions/setup-node@v3
      with:
        node-version-file: .node-version
        registry-url: "https://registry.npmjs.org"
    - uses: pnpm/action-setup@v2
      with:
        version: 8.9.0

    # Run package install. If install fails, it probably means the updated lockfile was
    # not included in the commit.
    - run: pnpm install --frozen-lockfile
      shell: bash

    # Install the CLI.
    - run: pnpm install -g @aptos-labs/aptos-cli
      shell: bash

    # Kill anything running on ports we need. This is what GH recommends, see more:
    # https://github.com/actions/runner-images/issues/2820#issuecomment-790367908
    # Eventually we'll make it possible for the CLI to do this itself.
    - run: |
        declare -a PORTS=("8080" "8081" "8070" "8090" "43234" "43235" "43236" "43237" "43238" "43239" "43240" "43241" "43242" "43243" "43244" "43245" "43246" "43247" "43248" "43249" "50051" "50052")
        for PORT in "${PORTS[@]}"; do
          PID=$(sudo lsof -t -i:$PORT) || true
          if [ -z "$PID" ]; then
            echo "Nothing running on port $PORT that we have to kill"
            continue
          fi
          sudo kill -9 $PID || true
          echo "Killed process $PID running on port $PORT"
        done
      shell: bash

    # Run a local testnet in the background.
    - run: aptos node run-local-testnet --force-restart --assume-yes --with-indexer-api --log-to-stdout >& ${{ runner.temp }}/local-testnet-logs.txt &
      shell: bash

    # Wait for the local testnet to be ready by hitting the readiness endpoint.
    # We give it a while because the CLI will have to download some images before
    # actually running the local testnet, which can take a while.
    - run: pnpm install -g wait-on
      shell: bash
    - run: wait-on --verbose --interval 1500 --timeout 120000 --httpTimeout 120000 http-get://127.0.0.1:8070
      shell: bash

    # Run the TS SDK tests.
    - uses: nick-fields/retry@7f8f3d9f0f62fe5925341be21c2e8314fd4f7c7c # pin@v2
      name: sdk-pnpm-test
      env:
        # This is important, it ensures that the tempdir we create for cloning the ANS
        # repo and mounting it into the CLI container is created in a location that
        # actually supports mounting. Learn more here: https://stackoverflow.com/a/76523941/3846032.
        TMPDIR: ${{ runner.temp }}
      with:
        max_attempts: 3
        timeout_minutes: 25
        command: pnpm run test

    - name: Print local testnet logs on failure
      shell: bash
      if: failure()
      run: cat ${{ runner.temp }}/local-testnet-logs.txt
