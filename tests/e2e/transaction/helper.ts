// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

import {
  Account,
  Aptos,
  AccountAddress,
  UserTransactionResponse,
  TypeTag,
  EntryFunctionArgumentTypes,
  HexInput,
  InputGenerateTransactionData,
} from "../../../src";
import { FUND_AMOUNT } from "../../unit/helper";

export async function publishPackage(
  aptos: Aptos,
  senderAccount: Account,
  metadataBytes: HexInput,
  codeBytes: Array<HexInput>,
) {
  const rawTransaction = await aptos.publishPackageTransaction({
    account: senderAccount.accountAddress.toString(),
    metadataBytes,
    moduleBytecode: codeBytes,
  });
  const signedTxn = await aptos.signTransaction({
    signer: senderAccount,
    transaction: rawTransaction,
  });
  const txnHash = await aptos.submitTransaction({
    transaction: rawTransaction,
    senderAuthenticator: signedTxn,
  });
  return (await aptos.waitForTransaction({
    transactionHash: txnHash.hash,
  })) as UserTransactionResponse;
}

export async function fundAccounts(aptos: Aptos, accounts: Array<Account>) {
  // eslint-disable-next-line no-restricted-syntax
  for (const account of accounts) {
    // eslint-disable-next-line no-await-in-loop
    await aptos.fundAccount({ accountAddress: account.accountAddress.toString(), amount: FUND_AMOUNT });
  }
}

// Transaction builder helpers
// single signer
export async function rawTransactionHelper(
  aptos: Aptos,
  senderAccount: Account,
  functionName: string,
  typeArgs: TypeTag[],
  args: Array<EntryFunctionArgumentTypes>,
): Promise<UserTransactionResponse> {
  const rawTransaction = await aptos.generateTransaction({
    sender: senderAccount.accountAddress.toString(),
    data: {
      function: `${senderAccount.accountAddress.toString()}::tx_args_module::${functionName}`,
      typeArguments: typeArgs,
      functionArguments: args,
    },
  });
  const senderAuthenticator = await aptos.signTransaction({
    signer: senderAccount,
    transaction: rawTransaction,
  });
  const transactionResponse = await aptos.submitTransaction({
    transaction: rawTransaction,
    senderAuthenticator,
  });
  const response = await aptos.waitForTransaction({
    transactionHash: transactionResponse.hash,
  });
  return response as UserTransactionResponse;
}

// multi agent/fee payer
export const rawTransactionMultiAgentHelper = async (
  aptos: Aptos,
  senderAccount: Account,
  functionName: string,
  typeArgs: Array<TypeTag>,
  args: Array<EntryFunctionArgumentTypes>,
  secondarySignerAccounts: Array<Account>,
  feePayerAccount?: Account,
): Promise<UserTransactionResponse> => {
  const transactionData: InputGenerateTransactionData = {
    sender: senderAccount.accountAddress.toString(),
    data: {
      function: `${senderAccount.accountAddress.toString()}::tx_args_module::${functionName}`,
      typeArguments: typeArgs,
      functionArguments: args,
    },
    secondarySignerAddresses: secondarySignerAccounts?.map((account) => account.accountAddress.data),
    feePayerAddress: feePayerAccount?.accountAddress.data,
  };

  const generatedTransaction = await aptos.generateTransaction(transactionData);

  const senderAuthenticator = aptos.signTransaction({
    signer: senderAccount,
    transaction: generatedTransaction,
  });

  const secondaryAuthenticators = secondarySignerAccounts.map((account) =>
    aptos.signTransaction({
      signer: account,
      transaction: generatedTransaction,
    }),
  );

  let feePayerAuthenticator;
  if (feePayerAccount !== undefined) {
    feePayerAuthenticator = aptos.signTransaction({
      signer: feePayerAccount,
      transaction: generatedTransaction,
    });
  }

  const transactionResponse = await aptos.submitTransaction({
    transaction: generatedTransaction,
    senderAuthenticator,
    secondarySignerAuthenticators: {
      additionalSignersAuthenticators: secondaryAuthenticators,
      feePayerAuthenticator,
    },
  });

  const response = await aptos.waitForTransaction({
    transactionHash: transactionResponse.hash,
  });
  return response as UserTransactionResponse;
};

// hard-coded bytecode for the contract, so we don't have to recompile it every time in ci
export const ARGUMENT_TESTS_CONTRACT_METADATA =
  // eslint-disable-next-line max-len
  "0x25417267756d656e7420546573747320666f722074686520547970657363726970742053444b0100000000000000004034383630363633374532323330393544304537333845373643364245334133384132383536314443434431343839324239364133443032313545363838323133f2011f8b08000000000002ffa5903f6fc23010c5777f0acb7b02485d1990aa2e1d3a345b84a2c379a66988cfb2ddb455d5ef8e9d04c4c086ece5eedefbdd9fda91eee988bdb034406ea5daf9e3d7001b6585108334ec65fc80ac7e1d82f69d8bf2fdf95589113e746cb3635da6a784a85b38d8165677087bb17391c38b4fd86ff67d12fec9136b3a654b59aee64f595468f628364b30f08895b9f896e43556f27f2657dcc3be1d3ea1d3948fc16346153cb372035153db7a8490f798348db95944ad7f366ac94fde86af73a4da9312d1930da463ba5043cb41a76a33df692c6e1adc156f13e800184d06ea0c91c2dffaa6010000010e74785f617267735f6d6f64756c65e21b1f8b08000000000002ffed5cff6fdb3616ff7d7f056f076436a6db2cea8bbfa429d6adc1aec0aed9a5eeb04310088a4d27ba399667c969735bfff77b4f1225922225661db00153d1d816f9f8e1d3e3fb4652d47dba3e6e19c90ff12e8b577992eea2f8707bbc67bb3c5b2cf2f7789545f725d52f9f10f877cc18c9f2f56291e58764777b2a17b2c3213d28655972bb636ae1035be52dca748f2c2c16bfbc61db8d432e8acb0f2ad1cd7fa16d43545caa4425738bc51b1d93f9e39e45c96e935620d0b820f8f2cb2fc9f28e919237b265bbdbfc2e23f181915d9a13f6f331de7e5150aed25d969357afbfb9b8bc3cff6619fd001f1797d177e7afbf5dfe73418ea14fce883b999c4ab8c90ee4c0d11fe2ed91758057903fbcf8eeedf99be8f5c5323afff7db17df71702a829782222e493200db3112efd6bc9042e1eeb35c84bef87ef9eae27589f76af99fe8fcf2127a9a7068cf049da5f7bf0ddae5d0be161a9ae671b203619075b2d9b003a85f291f92dfc5bbbabbfe8e28ef28c08e04f27fbdf8317a3b83da19ca2e084ed53a37844a3784da3008bc76bd87d01ec57ba0737f1e4ee9bc4d14fad1d7afbeadc77fe6fbe1d4f727536f3a9907811bba9a7ee9ac6a03bf50f8fe84cea81786733a997b333ff4e0bf37f5c3c9d4f7dc6938a3aeeb6bf8a74158e1c02fecdc0da600319b536fea41cff3c0a75e007ccc4034b370369d4fa6b3c0a3e17c0e9d8441e84ff0cf9bfbc13498c1384de7aee7d279e8cde7280ea1bff31fbf07dd3c7f197d7d7101fa7893a65be8303f1cd9a98eaa16bbabaf6e244ff5048de83d3d41e8d7fa65e882ce6a01077a12905a2dbb504bf2e2e5cbcbf3376f16245eaf0f2ccb80f02bade3d4b67eb3bc7cf51a86a7b4fe67c7d973687ff3297bbf8702b68e4a87f5a95ed0952f28e55d21a0d81143babc2a86c1219b789bc1175e906b6e71604c8c6cd2ed367d075d8137cad92df823f48659555e911ceee37cc15b4d1ce23a843aa867e41fcd0fb7f8d1c12e0ebc74bbc2c555034b030f3f7cfc0838b70644d4158ee28622265e09a068c45ef9e5975f7dd0a8651ccca322345e09d0b5fd7bc26f5ff8ddd713aa2bc70e7db127bc127ad238104f5bea6b4b7b85498501820b499c541e243bb7e4d912fab6847df750982d671a2ec47b282e4571fe9e2ed1fb9df1fcdf19af4770b533ab8455f934417c75c915f96af21e84089ff1cdaaf85eb34df1ed52aff8f683b0f89ecee6dddd2a5eb0710842c762e195c6453a50068c14dfc048f10d8c14dfc048f10d8c7c8a9c14ac40bbe32a276f587edcbf8cf398dcc519f9893d56092dfe63f7fbfc312a334bcc56caa4f2d939165fb22c3d1e56ecb9a327a74f23f73ac93f482c4b140ddb9c6a73dc81174ff22a411fadd97e9b3eb2c3829c9439f758b8c538cbd821ffdba8ac592caaf18dd24ddd6e4cce4c31cd2193f1698db5653981dbc99a41d3de128edfb5dc2a812693a6e8dd5d027c27e419f1445e3975a1442889f4101dd806daf2e47f756071ce2a998ef43c0b0c0b4c47a50004ac5b06d78856d68c4e946e159cfbf48145793a920af1df4983eeb42ae5a1fce5834ca16755e0b1529ecd21bd8f14f6faf82d4768b1d81fb3bbe8265efd343ab93f96e3e7e0a7428e239490cf79b6562865f393831dd8033b64ac8152b42343638bd6686d6782e5c943ac5a5dcd69ba57181d3be686f4b736f42c1bf2e9a171f0b9fdc87d352268ca2b2955f6bb3fde6c9315015d3d3c16c65c4c4cf3f8367bb60487bb84b0b584b8b50427bb84f8b00ce00f1ced720a7f33f89b234d4188942e926282b0c47c60e922b58be42ed2bbd8c0c516145bd0021b5ba00b5f526c41b105c516145b506c41e7cf473a2f22dda9309f2e7ea61be01fdb813bd1d415a92ad49e9cf4a2b86614880f7618b40303b2463b10af03c4a396207e0748e85b82045db7436d851276a060de64873235a3f0f4c10e6866062a57702c71e6661c7d84b254c30e6d16e75fb6706e2f1c663f9660b41f0cd4dc16cdeb47037db745f3fbd140f16dd1028b3ba5f6820bfbe1d0146ce1a6bd70dc264a44c0e9079df58256f661cbe5bc17506f28b6ceb6c352ca65bc27590a757be1ec2d85d27e307b4ba15e3f9abda550bf1fcdde52686071a7f69642c37eb827580a9df6c2c996d28f38eb457c9a99d0792fa0d14ce42c70629bfb9505cdeca549b1a02842a329975a1da9fc582cae2a65d58aaa525a2da32aa5d5daa98ac0174c95f27a95542eaf86ab5e1a956babbd18520e815c57cd6ffa66d0a56b8a8af45d5c546c5194721263728be438eb44382a6b8c6d0265a5b04da02cf069ba5057deda24ad85ad16492d7425bab408b9fce580d122e343d119069a56e55e1d1f92c619b728ca21119d7f8b0487a403a11812c143b709704804a7db26c02111fca8a60b2af0200f0927298644f4772d927a481437d622e443223ba716596d1d5d2ea769058bf56b0673d1c768c7325c31739bd12c11b457dc35c23f073196172f2fcc98d480297f4961c112d97b0ab2c1fdb6bb1a9378f5f3318171d0ae43f0092d77b2e8f4a50d2e79e54b24c74dad33719f0b96704da4b8bf75266d7ac192b48918f7bacea40d30582e3711e3bed799b419065b114636a8c233ba781298c88bedb03379970c76530ce4f5bed8596bd3cc215343a3d212b00ddfb23fe69bd948d9371b3b646600286d04016e591e358b2ea3f117f2fa9243e62d88a854aa2c2ab6df47629871842071750d433bb16c5d0469edde1d2ef15b82404cd7eca70100b505400dd3ec9f0184670b817aa7d9270308df1602b551b301061081f58d509d2c8a5237b405291457b77b0420534b109edc9836537013ce12aad475a750d97a7f43aa833c92b8b60a5baa7809978333ad0ab28a1ab1a8467dcb28c3b1c480ee10fe280e3e4e52aeb501866b89519a0087c0c74646924f452c6a898596a0477a3b1b3bd4b38541d537e0801a0143be2d125a8001c9a3c052600b847660000a7d000aadef8d9a8504757877535bacc2260c58508758334bacda60f47095d920e2dc1291db8d04d8193800ddd36c5d91de7061c710b73c8921dc54816e5d79c60749c937f1eeb39cdc30b28ab75bb626b89d436292ad0ec93e27fbf8719bc6eb825898171e9207dc9c1a2686c3c47098180e13c3a74e0c7be63fe66527d1c338954f71b81f71b8eb70b8b7706a07e1d42ec1119d8023d8bc23d8b8a3d9ad9653f08a05213516935c315b15d34e297f94f240359f53923239a992b8d3e54852b623a42b62ca21260d62dc9742b7147bd5e0a984be16774f5c5d8c20ade3cf3b347e77b54a8fbb622bfe447d8ea1bcee71e843301a82d1108c8660f45b8351c7336ab56f2ab665646f542ed10d21ed2f1ed2ee8fdb3cd96f795ccbec021bafa31d755e479ddf5117f40652d6e51987903a84d421a40e21f563426af130aee272a23d06da7594ec748ffbcb0fb1764562c79694da937af6a4be3d6920905ef7aca9abd2723ae437641e7f81cca3fc4c76db64c78acc43a736cf960bb23ea4fbe7b827236cbc2f9f173210b6cdb104072cd9add9fb2206eb1eb0e64fa6978790a1d1e8a4002ed25f43259819290e602f16c9ee21de26786606d68e478683cae4f38691f1b8fd90ffff92fdb3a54396d53d5537e2905f6387dcfcaa3ccc5fefc92283370646b4dd7d90c5dd16b4b4f28e775b0d9b5b3b4894695548a542b3a0930d19f155fb248b8a7d2e1424c71e8f0d37d8d1c838008613d7a601f840d83663fdfde36ec347f4ef9afae781836d19fa313c8752757a9302fc3b5950a79d6cf2c3dd0d930ec77d1ab7d4282d517bfe7ef590b077d7e2940135090b23d87419b65186347b48b38734fbe969f682341e43f613a27f90dc82e40d2427209bbe62f0aa8dab766d65cb3adbd31bac965267995a6bd45aa0dee8f47666b42b9321f55a8e4ed3f5e6d141290b40abfb5a7dd7abb85eab8d5a6c525babe960933518a61fad5251818520a72914155a0871bae654072a29ba12ddda1599a2f87250eb98eae86adab7de4c81b4c5aa0084a991b65c15833865d256b484a14ca574753a91d84eb174356da934532f6db12a15614aa62d57a5224ed5b4152da92853385d9d4e2aa6a99d45b2d8f5549e1ae60573e3d3a6fb783fd2bff800a64e993a6f929e5ecac6c2acc83029529f5b823566ddc24f99a947b7dbf406264d35c573d361794bb9888f1762df237d34224f29b659c212cf93ab12383578bc86467d14d88a8cda917906e552864cfb5c664f36a80861d43cca5cb3c87f79e34a30f2009dda054f7245bab0c9f5d3b5a3592e2bd4a459b7527e580cfe47ddb7ac12cafb142a1e14718c4e7887ca0ae3d35ad38f6a2d2e842ac689b75abfb4e3ccf4c28e6ad5929ee18b5bea4b0f2f6fea4b1f2f57f56580976b87acd203c39feef8ba7ed34821609c42c345d19930856ebd79a4b5df45cd559eb9ca3757e9f6d6906da5b847bdea77026e589c1f814a7e52b42a0515e3f5f8ba1010c331594b5ad654afeee2dd2d8baa8268b38d6fb31132c6d742afaaaaebbae05a5c43c66eb9389b2315a4ebb52da7bad57edadd9853e91b7b568d3d7d63dfaab1af6f1c58350e4489e95e8163bf2a2f1ff6d157bd9d992ad474483ab463a8515322f9348ea1aa9516b58ed898b38ad6611a89b4efd88c26d7accec4e8f9110fbc745218a52a9c56e92630ca583869d2d305ed63c22c78e5f4474ba8c6831d2d4afd990d4d3a2b9dc7d0d6eb0e5b5810e2590a1b323c2a6143e7513bbad0b7ec975a32581c51b020ac0f1f98697bce15981bf658d458da686adc94f941ffc14f0d7e6af053839ffa73f8299b47c9c54981a32dd52fe80c5e6ef07283971bbcdc1fe5e5f84fb3b7333f656cf6797cb2ad2df5b4a5beb634d0dabff0aade96776d2d0738ad39bed39ab83badd9b843ae07473d38eac1510f8efacfe3a86141fcc327ff078b06c507c366000000000400000000000000000000000000000000000000000000000000000000000000010e4170746f734672616d65776f726b00000000000000000000000000000000000000000000000000000000000000010b4170746f735374646c696200000000000000000000000000000000000000000000000000000000000000010a4d6f76655374646c69620000000000000000000000000000000000000000000000000000000000000004114170746f73546f6b656e4f626a6563747300";

// interpolate a named address into the contract bytecode
export async function getContractBytecode(deploymentAddress: AccountAddress) {
  // eslint-disable-next-line max-len
  return `0xa11ceb0b060000000c0100100210200330a50104d501f80105cd03f80707c50bb10408f60f4006b6108c0710c21782020ac4191a0cde19a4240d823e06000001010102010301040105010601070008080000090800050a0700020d07010001031007010000021e0200062a0700000b000100000c000200000e000300000f0400000011050000001205000000130600000014070000001500001e0000000000000000000000000000000000000000000000000000000000000016050500071b0b000100051c0a0900021d0d0e0108041f040e0002200e1200022113140002221315010801231818000324001e010003251f19010003261f19010003271f2001000328211901000329221e0100062b002501000a0a0c0c100c0a110a170a190a1a0a1b0a180a1c0a1d0a0e0a0912171317141715171617171913191419151916191717171a131a141a151a161a171b131b141b151b161b17181318141815181618171c131c141c151c161c171d131d141d151d161d170e130e140e150e160e170913091409150916091711131114111511161118221819182618171827181a1828181b18291818182a181c182b181d182c180e182d1809182e1811182f18301831180a18321833183418351836183718381839183a183b183c183d183e1801183f1840184118421843184418451846184718481849184a184b184c184d184e184f1850185118521853185400010a080203050505030b030108000b030108000b0301080001060c2001020d0e03040f0508020b030108000a020a010a020a0d0a0e0a030a040a0f0a050a08020a0b030108000b0401020b0401010b0401020b04010d0b04010e0b0401030b0401040b04010f0b0401050b040108020b04010b0301080026060c060c060c060c060c0a0501020d0e03040f0508020b030108000a020a010a020a0d0a0e0a030a040a0f0a050a08020a0b030108000b0401020b0401010b0401020b04010d0b04010e0b0401030b0401040b04010f0b0401050b040108020b04010b0301080022060c0501020d0e03040f0508020b030108000a020a010a020a0d0a0e0a030a040a0f0a050a08020a0b030108000b0401020b0401010b0401020b04010d0b04010e0b0401030b0401040b04010f0b0401050b040108020b04010b0301080007070a08020a02030a08020a020a0a020a0a02010802010a0201070a090001080001060b03010900010501060801060805030b030108000c0a0b030108000801010b0301080001080501060805010c010b0301090089010a0b0301080003030303030303030303030303030303030303030303060206010602060d060e06030604060f0605060802060b0301080003030303030303030303030b030108000b030108000b030108000b030108000b0401020b0401010b0401020b04010d0b04010e0b0401030b0401040b04010f0b0401050b040108020b04010b030108000b0401020b0401010b0401020b04010d0b04010e0b0401030b0401040b04010f0b0401050b040108020b04010b030108000a020a020a010a010a020a020a0d0a0d0a0e0a0e0a030a030a040a040a0f0a0f0a050a050a08020a08020a0b030108000a0b030108000a020a020a010a010a020a020a0d0a0d0a0e0a0e0a030a030a040a040a0f0a0f0a050a050a08020a08020a0b030108000a0b030108000a020a010a020a0d0a0e0a030a040a0f0a050a08020a0b030108000a020a010a020a0d0a0e0a030a040a0f0a050a08020a0b03010800010201030101010d010e0104010f010b0401090001060b040109000106090002060b040109000609000109000903030a050a050a050a050a050a050a051d010101010101010101010101010101010101010101010101010101010101080601090101090201090301090401090501090601090701090801090901090a010a0101090b01090c010a0d01090d010a0e01090e010a0301090f010a04010910010a0f010911010a05010912010913010a0b03010800010914010b040101010915010b040102010916010b04010d010917010b04010e010918010b040103010919010b04010401091a010b04010f01091b010b04010501091c010b0401080201091d010b04010b030108000e74785f617267735f6d6f64756c65056572726f72066f626a656374066f7074696f6e067369676e657206737472696e6709747970655f696e666f06766563746f720d456d7074795265736f757263650953657475704461746106537472696e671a6765745f65787065637465645f766563746f725f737472696e67196765745f746573745f6f626a6563745f616464726573736573064f626a656374106765745f746573745f6f626a656374730b696e69745f6d6f64756c65064f7074696f6e11707269766174655f617267756d656e7473107075626c69635f617267756d656e7473217075626c69635f617267756d656e74735f6d756c7469706c655f7369676e6572731b7075626c69635f617267756d656e74735f6f6e655f7369676e657209747970655f7461677312766965775f616c6c5f617267756d656e74730b64756d6d795f6669656c640e656d7074795f6f626a6563745f310e656d7074795f6f626a6563745f320e656d7074795f6f626a6563745f33077265766572736504757466380e6f626a6563745f616464726573730e436f6e7374727563746f725265660a616464726573735f6f660d6372656174655f6f626a6563740f67656e65726174655f7369676e65721b6f626a6563745f66726f6d5f636f6e7374727563746f725f7265660d696e76616c69645f7374617465046e6f6e650769735f6e6f6e650769735f736f6d6506626f72726f7708636f6e7461696e7304736f6d650854797065496e666f07747970655f6f66${deploymentAddress.toStringWithoutPrefix()}00000000000000000000000000000000000000000000000000000000000000010520${deploymentAddress.toStringWithoutPrefix()}`;
}

export async function publishArgumentTestModule(
  aptos: Aptos,
  senderAccount: Account,
): Promise<UserTransactionResponse> {
  const contractBytecode = await getContractBytecode(senderAccount.accountAddress);
  const response = await publishPackage(aptos, senderAccount, ARGUMENT_TESTS_CONTRACT_METADATA, [contractBytecode]);
  return response;
}

export const singleSignerScriptBytecode =
  // eslint-disable-next-line max-len
  "a11ceb0b060000000701000402040a030e0c041a04051e20073e30086e2000000001010204010001000308000104030401000105050601000002010203060c0305010b0001080101080102060c03010b0001090002050b00010900000a6170746f735f636f696e04636f696e04436f696e094170746f73436f696e087769746864726177076465706f7369740000000000000000000000000000000000000000000000000000000000000001000001080b000b0138000c030b020b03380102";

export const multiSignerScriptBytecode =
  // eslint-disable-next-line max-len
  "a11ceb0b060000000701000402040a030e18042608052e4307713e08af01200000000101020401000100030800010403040100010505060100010607040100010708060100000201020202030207060c060c0303050503030b000108010b000108010b0001080101080102060c03010b0001090002070b000109000b000109000002070b000109000302050b000109000a6170746f735f636f696e04636f696e04436f696e094170746f73436f696e087769746864726177056d657267650765787472616374076465706f73697400000000000000000000000000000000000000000000000000000000000000010000011a0b000a0238000c070b010a0338000c080d070b0838010d070b020b03160b061738020c090b040b0738030b050b09380302";

export async function publishTransferPackage(aptos: Aptos, senderAccount: Account) {
  await publishPackage(
    aptos,
    senderAccount,
    // eslint-disable-next-line max-len
    "107472616e73616374696f6e5f746573740100000000000000004035364643333939394442364244363842383430304539323438363839393837413338313439344644413241343631334144373946333630323134353539324545ba011f8b08000000000002ff5d8f3d0ec2300c85779f0265e944032b12030b97a8aaca4d4c1b95fc284e0bc72729a503f2e2a7f7d97e6e02aa09076ac1a1a5c3f5205244c7a892f1ae4bc449c04291b32ae6a9ce25001a4d819c26a70c717d0bc9f33de6052f1fa7160693325c8d2905be4899e538f7b5f25662218f4fec796b958f5467a082484b19b2685c053cf7dac4a2bf98f50bc9c7efc236bbeb2a0742ad233113b7b0baddeeaeb9df6701ff9f15a3131fec1509190201000001087472616e73666572ca021f8b08000000000002ff9552cb4ec33010bcf72bf654a522dc10071790101f12b9f1a6582476e407a142fd77fc48d23826125891627b661fb39e4e32db22184585a6b5e1525406b52124dc34a8e07b07e03eab11686fa4ae1a453b1ca4fa20245ed4928be33629c03b87f6f6d4f21a50187581c60a3083ac4e97cafd0a07c7d570e5cac35ef3b34055cef71a6b29d82f00eda415a61ae3ece343064da109c6f41c431953a8758a4d413988bdd43c2f780893f2ab45035e74a4c07338103270f3ce141d9e6e5323e4d5efdfdcf6a508ec32d17338ae53c6b6fe9c33d2cb741287f01a7e457e87ea8cc5beb3cbb6cb65bd5bc45623f8e50c539b3ccb520edca58dc07d3acd75632358cc6f552e52cfb3c9b993ea5481e75e6381dc89a3db8b85df0443b5e9b7959b14d61c3f3d3ff14bee897fbc9caf3fcd6f43ec54364a9d355e7f00fb8d2dcfd603000000000300000000000000000000000000000000000000000000000000000000000000010e4170746f734672616d65776f726b00000000000000000000000000000000000000000000000000000000000000010b4170746f735374646c696200000000000000000000000000000000000000000000000000000000000000010a4d6f76655374646c696200",
    [
      // eslint-disable-next-line max-len
      `a11ceb0b060000000801000602060a031022043208053a4e0788015208da01400c9a024c000001010102020404010001010508000000000100000302010002060506010002070701010002080901010002090a060100020403040404050403060c03050007060c060c0303050503010b0001080101080102060c03010b0001090002050b00010900030b000108010b000108010b0001080102070b000109000b0001090002070b0001090003087472616e736665720a6170746f735f636f696e04636f696e0a74776f5f62795f74776f04436f696e094170746f73436f696e087769746864726177076465706f736974056d657267650765787472616374${senderAccount.accountAddress.toStringWithoutPrefix()}00000000000000000000000000000000000000000000000000000000000000010001040003080b000b0138000c030b020b0338010201010400081a0b000a0238000c070b010a0338000c080d070b0838020d070b020b03160b061738030c090b040b0738010b050b0938010200`,
    ],
  );
}
